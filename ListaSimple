/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Funciones;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;

/**
 *
 *
 */
public class listaSimple extends javax.swing.JInternalFrame {
    //declaramos lista de tipo objeto DatosListaDto
    private List<DatosListaDto> lista = new ArrayList<>();
    /**
     * Creates new form listaSimple
     */
    public listaSimple() {
        initComponents();
        //limpiamos tamaño de la lista
        labelSizeLista.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textNombre = new javax.swing.JTextField();
        textEdad = new javax.swing.JTextField();
        enlistar = new javax.swing.JButton();
        vaciar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        labelSizeLista = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        eliminar = new javax.swing.JButton();
        textElemento = new javax.swing.JTextField();

        setClosable(true);
        setTitle("LISTA SIMPLE - LIST");

        jLabel1.setText("NOMBRE: ");

        jLabel2.setText("EDAD:");

        textEdad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textEdadKeyTyped(evt);
            }
        });

        enlistar.setText("LISTAR");
        enlistar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enlistarActionPerformed(evt);
            }
        });

        vaciar.setText("VACIAR");
        vaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaciarActionPerformed(evt);
            }
        });

        texto.setColumns(20);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        jLabel3.setText("ELEMENTOS EN LA LISTA:");

        jLabel4.setText("TAMAÑO DE LA LISTA:");

        labelSizeLista.setText("jLabel5");

        jLabel5.setText("NUMERO DE ELEMENTO A ELIMINAR:");

        eliminar.setText("ELIMINAR");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        textElemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textElementoActionPerformed(evt);
            }
        });
        textElemento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textElementoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textElemento, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(enlistar)
                                        .addGap(18, 18, 18)
                                        .addComponent(vaciar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(eliminar)
                                        .addGap(24, 24, 24))))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelSizeLista)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(textElemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enlistar)
                    .addComponent(vaciar)
                    .addComponent(eliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labelSizeLista))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void textEdadKeyTyped(java.awt.event.KeyEvent evt) {                                  
  //funcionalidad para que el combo de texto solo acepte numeros
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)
            || (c == KeyEvent.VK_BACK_SPACE)
            || (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }        
    }                                 

    private void enlistarActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //se captura el nombre y edad en varialbles tipo String
        String nombreObtenido=textNombre.getText();
        String edadObtenida=textEdad.getText();
        //si el nombre y edad no estan vacios
        if(!nombreObtenido.isEmpty()&&!edadObtenida.isEmpty()){
            //nuevo objeto DatosListaDto
         DatosListaDto registro = new DatosListaDto();
         //se setea la variable nombre y edad del objeto
        registro.setNombre(nombreObtenido);
        registro.setEdad(edadObtenida);
        //se agrega el objeto a la lista
        lista.add(registro);
        //se llama al metodo imprimir
        imprimir();
        //se ponen en blanco los textbox nombre y edad de la pantalla
        textNombre.setText("");
        textEdad.setText("");
           
        }
    }                                        

    private void textElementoActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void vaciarActionPerformed(java.awt.event.ActionEvent evt) {                                       
        //eliminamos todo de la lista
        lista.clear();
        //llamamos a metodo imprimir
        imprimir();
    }                                      

    private void textElementoKeyTyped(java.awt.event.KeyEvent evt) {                                      
//funcionalidad para que el combo de texto solo acepte numeros
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)
            || (c == KeyEvent.VK_BACK_SPACE)
            || (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }             
    }                                     

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {                                         
       //variable para el indice
        int numeroElementoElegido=0;
        //variable para capturar el nuemero de elemento que se quiera borrar en String
       String elementoElegido= textElemento.getText();
       //si el numero que enviamos  no es vacio
       if(!elementoElegido.isEmpty()){
           //pasamos el elemento elegido en String a Entero
       numeroElementoElegido=Integer.parseInt(elementoElegido);
       //si el numero elemento elegido es igual o mayor que uno y menor o igual al tamaño de la lista
       if(numeroElementoElegido>=1 && numeroElementoElegido<=lista.size()){
           //le restamos uno al elemento de la lista por que los indices de la lista comienzan en cero en adelante
       numeroElementoElegido=numeroElementoElegido-1;
       //removemos de la lista el elemento con posicion del numero elegido
       lista.remove(numeroElementoElegido);
       imprimir(); // llamamos a metodo imprimir
       textElemento.setText("");//seteamos textbox donde ingresamos numero a eliminar en pantalla
       }
       
       }
       
       
    }                                        

    public void imprimir(){
        texto.setText("");
        int indice=0;
       
    for(DatosListaDto registro:lista){
       
        indice=indice+1;
    texto.append(" "+indice+". "+registro.getNombre().toUpperCase()+" --- "+registro.getEdad()+" años"+'\n');
    }
    
     labelSizeLista.setText(String.valueOf(lista.size()));
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton eliminar;
    private javax.swing.JButton enlistar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelSizeLista;
    private javax.swing.JTextField textEdad;
    private javax.swing.JTextField textElemento;
    private javax.swing.JTextField textNombre;
    private javax.swing.JTextArea texto;
    private javax.swing.JButton vaciar;
    // End of variables declaration                   
}
